package controllers

import (
	"github.com/astaxie/beego"
	"encoding/json"
	"net/http"
	"io/ioutil"
	"bytes"
	"fmt"
)

type MainController struct {
	beego.Controller
}

type Prometheus struct {
	Status string
	CommonAnnotations struct{
		Description,Summary string
	}
	CommonLabels struct{
		Alertname,Instance,Job,Monitor,Node string
	}
}
type DDMessage struct {
	Msgtype string `json:"msgtype"`
	Markdown struct{
		Title string `json:"title"`
		Text string `json:"text"`
	} `json:"markdown"`
	At struct{
		AtMobiles []string `json:"atMobiles"`
		IsAtAll bool `json:"isAtAll"`
	} `json:"at"`
}
//main page
func (c *MainController) Get() {
	c.Data["Email"] = "244217140@qq.com"
	c.TplName = "index.tpl"
}
//for prometheus alert
func (c *MainController) Alert() {
	//{"receiver":"web\\.hook","status":"firing","alerts":[{"status":"firing","labels":{"alertname":"Node_alert","instance":"192.168.10.5:9100","job":"node1","monitor":"node1","node":"alert"},"annotations":{"description":"If one more node goes down the node will be unavailable","summary":"192.168.10.5:9100 node goes down!(current value: 0.2s)"},"startsAt":"2018-08-01T02:01:44.71271343-04:00","endsAt":"0001-01-01T00:00:00Z","generatorURL":"http://localhost.localdomain:9090/graph?g0.expr=node_load1+%3E+0.1\u0026g0.tab=1"}],"groupLabels":{"alertname":"Node_alert"},"commonLabels":{"alertname":"Node_alert","instance":"192.168.10.5:9100","job":"node1","monitor":"node1","node":"alert"},"commonAnnotations":{"description":"If one more node goes down the node will be unavailable","summary":"192.168.10.5:9100 node goes down!(current value: 0.2s)"},"externalURL":"http://localhost.localdomain:9093","version":"4","groupKey":"{}:{alertname=\"Node_alert\"}"}
	alert:=Prometheus{}
	fmt.Println(string(c.Ctx.Input.RequestBody))
	json.Unmarshal(c.Ctx.Input.RequestBody, &alert)
	fmt.Println(alert)
	c.Data["json"]=PostToDingDing(alert)
	c.ServeJSON()
}

func PostToDingDing(message Prometheus)(string)  {
	url:=beego.AppConfig.String("ddurl")
	text:="## [DF云告警平台告警信息](http://prometheus.datafountain.cn/)\n\n"+"#### "+message.CommonAnnotations.Summary+"\n\n"+"###### 告警级别："+message.Status+"\n\n"+"###### 告警名称："+message.CommonLabels.Alertname+"\n\n"+"`"+message.CommonAnnotations.Description+"`\n\n"+"![DF](https://www.datafountain.cn/_df_static/img/logo.378fa14.png)"
	u := DDMessage{
		Msgtype:"markdown",
		Markdown: struct {
			Title string `json:"title"`
			Text  string `json:"text"`
		}{Title: "智享云prometheus告警", Text: text},
		At: struct {
			AtMobiles []string `json:"atMobiles"`
			IsAtAll   bool `json:"isAtAll"`
		}{AtMobiles:[]string{"15395105573"} , IsAtAll:true },
	}
	b := new(bytes.Buffer)
	json.NewEncoder(b).Encode(u)
	fmt.Println(b)
	//url="http://127.0.0.1:8081"
	res,err := http.Post(url, "application/json", b)
	//resp, err := http.PostForm(url,url.Values{"key": {"Value"}, "id": {"123"}})
	if err != nil {
		return err.Error()
	}
	defer res.Body.Close()
	result,err:=ioutil.ReadAll(res.Body)
	if err != nil {
		return err.Error()
	}
	fmt.Println(string(result))
	return string(result)

}
